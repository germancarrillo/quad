#include <iostream>
#include <fstream>
#include <iomanip>
#include <vector>
#include <string>
#define min_plot 1580
#define max_plot 1620
#define angle_range 20
#define take_off_T 1630  // take-off Throttle
#define min_spin_T 1610  // start-rotating-propellers 
#define max_allowed_T 1660 // max-allowed Throttle
#define TMIN -TMIN-
#define TMAX -TMAX-

void XYquad(){
  const int n = -N--1;	
  float t[n],roll[n], pitch[n], yaw[n], N[n],S[n],E[n],W[n],p_p[n],p_i[n],p_d[n];
  string text;
  ifstream data;
  string Kp,Ki,Kd;	
  data.open("log.txt");
  
  data>>text>>Kp>>Ki>>Kd;	

  string title = "Configuration Kp:"+Kp+" Ki:"+Ki+" Kd:"+Kd;	
  	 
  int k = 0;

  while(!data.eof() && k<n){
    data>>text>>roll[k]>>pitch[k]>>yaw[k]>>N[k]>>S[k]>>E[k]>>W[k]>>t[k]>>p_p[k]>>p_i[k]>>p_d[k];
    k++;
  }
  
    TGraphErrors * grp_roll = new TGraph(n,t,roll);
    TGraphErrors * grp_pitch = new TGraph(n,t,pitch);
    TGraphErrors * grp_yaw = new TGraph(n,t,yaw);
    TGraphErrors * grp_N = new TGraph(n,t,N);
    TGraphErrors * grp_S = new TGraph(n,t,S);
    TGraphErrors * grp_E = new TGraph(n,t,E);
    TGraphErrors * grp_W = new TGraph(n,t,W);
    
    TCanvas * Ca0 = new TCanvas("Ca0","Canvas",1200,800);    

    Ca0->Divide(2,3);

    Ca0_1->cd();
    Ca0_1->SetGrid();
    grp_roll->SetTitle(title.c_str());  grp_roll->SetLineColor(kRed);
    grp_roll->SetMarkerStyle(20);  grp_roll->SetMarkerSize(0.5);
    grp_roll->SetMinimum(-angle_range);  grp_roll->SetMaximum(angle_range);
    grp_roll->GetXaxis()->SetRangeUser(TMIN,TMAX);	
    grp_roll->GetXaxis()->SetTitle("t (ms)"); grp_roll->GetYaxis()->SetTitle("roll(degrees)");
    grp_roll->Draw("AP");

    Ca0_2->cd();
    Ca0_2->SetGrid();
    grp_pitch->SetTitle(title.c_str());  grp_pitch->SetLineColor(kRed);
    grp_pitch->SetMarkerStyle(20);  grp_pitch->SetMarkerSize(0.5);
    grp_pitch->SetMinimum(-angle_range);  grp_pitch->SetMaximum(angle_range);
    grp_pitch->GetXaxis()->SetRangeUser(TMIN,TMAX);		
    grp_pitch->GetXaxis()->SetTitle("t (ms)"); grp_pitch->GetYaxis()->SetTitle("pitch(degrees)");
    grp_pitch->Draw("AP");
    
    Ca0_4->cd();
    Ca0_4->SetGrid();
    grp_N->SetTitle("N");  grp_N->SetLineColor(kRed);
    grp_N->SetMarkerStyle(20);  grp_N->SetMarkerSize(0.5);
    grp_N->SetMinimum(min_plot);  grp_N->SetMaximum(max_plot);
    grp_N->GetXaxis()->SetRangeUser(TMIN,TMAX);	
    grp_N->GetXaxis()->SetTitle("t (ms)"); grp_N->GetYaxis()->SetTitle("N(pulse)");
    grp_N->Draw("AP");

    Ca0_3->cd();
    Ca0_3->SetGrid();	
    grp_E->SetTitle("E");  grp_E->SetLineColor(kRed);
    grp_E->SetMarkerStyle(20);  grp_E->SetMarkerSize(0.5);
    grp_E->SetMinimum(min_plot);  grp_E->SetMaximum(max_plot);
    grp_E->GetXaxis()->SetTitle("t (ms)"); grp_E->GetYaxis()->SetTitle("E(pulse)");
    grp_E->Draw("AP");

    Ca0_6->cd();
    Ca0_6->SetGrid();	
    grp_S->SetTitle("S");  grp_S->SetLineColor(kRed);
    grp_S->SetMarkerStyle(20);  grp_S->SetMarkerSize(0.5);
    grp_S->SetMinimum(min_plot);  grp_S->SetMaximum(max_plot);
    grp_S->GetXaxis()->SetRangeUser(TMIN,TMAX);		
    grp_S->GetXaxis()->SetTitle("t (ms)"); grp_S->GetYaxis()->SetTitle("S(pulse)");
    grp_S->Draw("AP");

    Ca0_5->cd();
    Ca0_5->SetGrid();
    grp_W->SetTitle("W");  grp_W->SetLineColor(kRed);
    grp_W->SetMarkerStyle(20);  grp_W->SetMarkerSize(0.5);
    grp_W->SetMinimum(min_plot);  grp_W->SetMaximum(max_plot);
    grp_W->GetXaxis()->SetRangeUser(TMIN,TMAX);	
    grp_W->GetXaxis()->SetTitle("t (ms)"); grp_W->GetYaxis()->SetTitle("W(pulse)");
    grp_W->Draw("AP");

    string image_name = "XYquad_Kp_"+Kp+"Ki_"+Ki+"Kd_"+Kd+".png";	

    Ca0->SaveAs(image_name.c_str());
    exit (0);
            
}
